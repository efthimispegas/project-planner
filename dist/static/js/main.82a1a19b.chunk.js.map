{"version":3,"sources":["components/layout/SignedInLinks.js","actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/NavigationBar.js","components/dashboard/Notifications.js","components/projects/ProjectsSummary.js","components/projects/ProjectsList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignUp.js","components/auth/SignIn.js","components/projects/CreateProject.js","actions/projectActions.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/rootReducer.js","config/fbConfig.js","App.js","localStorage.js","serviceWorker.js","index.js"],"names":["SignedInLinks","handleClick","_this","props","signOut","profile","this","react_default","a","createElement","className","NavLink","to","onClick","initials","Component","connect","dispatch","getState","_ref3","getFirebase","auth","then","type","catch","error","SignedOutLinks","NavigationBar","_this$props","authStatus","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","state","console","log","firebase","Notifications","notifications","map","key","id","user","content","moment","time","toDate","fromNow","ProjectsSummary","project","title","capitalize","authorFirstname","authorLastname","createdAt","calendar","ProjectsList","projects","concat","projects_ProjectsSummary","Dashboard","projects_ProjectsList","dashboard_Notifications","Redirect","compose","firestore","ordered","Projects","firestoreConnect","collection","orderBy","limit","ProjectDetails","_this$props$project","ownProps","match","params","data","SignUp","firstname","lastname","username","email","password","handleChange","e","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signUp","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","localStorage","hasOwnProperty","getItem","JSON","parse","setItem","stringify","authError","onSubmit","onChange","htmlFor","message","objectSpread","newUser","_ref2","getFirestore","createUserWithEmailAndPassword","response","doc","set","userCredentials","SignIn","signIn","credentials","_ref","signInWithEmailAndPassword","CreateProject","createProject","history","push","add","authorID","Date","initState","authReducer","arguments","length","undefined","action","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","serializedState","err","loadState","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","createStore","createStoreWithFirebase","__REDUX_DEVTOOLS_EXTENSION__","subscribe","saveState","App","es","BrowserRouter","layout_NavigationBar","Switch","Route","path","exact","component","Boolean","location","hostname","firebaseAuthIsReady","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82a1a19b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../actions/authActions';\r\n\r\nclass SignedInLinks extends Component {\r\n  handleClick = () => {\r\n    this.props.signOut();\r\n  };\r\n\r\n  render() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/create\">New Project</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\" onClick={this.handleClick}>\r\n            Log Out\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\">\r\n            <div className=\"btn btn-floating pink lighten-1\">\r\n              {profile.initials}\r\n            </div>\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToPros = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToPros\r\n)(SignedInLinks);\r\n","import { capitalize } from 'lodash';\r\n\r\nexport const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS', credentials });\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: 'LOGIN_FAIL', error });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    let { email, password, firstname, lastname } = newUser;\r\n    firstname = capitalize(firstname);\r\n    lastname = capitalize(lastname);\r\n\r\n    const initials = firstname[0] + lastname[0];\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(response => {\r\n        const { user } = response;\r\n\r\n        firestore\r\n          .collection('Users')\r\n          .doc(user.uid)\r\n          .set({\r\n            firstname,\r\n            lastname,\r\n            initials\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({\r\n          type: 'SIGNUP_SUCCESS',\r\n          userCredentials: { firstname, lastname, initials }\r\n        });\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: 'SIGNUP_FAIL', error });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: 'SIGNOUT_FAIL' });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass SignedOutLinks extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"right\">\r\n                <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n                <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignedOutLinks;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\n\r\nclass NavigationBar extends Component {\r\n  render() {\r\n    const { authStatus, profile } = this.props;\r\n    // console.log(authStatus);\r\n    const links = authStatus.uid ? (\r\n      <SignedInLinks profile={profile} />\r\n    ) : (\r\n      <SignedOutLinks />\r\n    );\r\n    return (\r\n      <nav>\r\n        <div className=\"nav-wrapper grey darken-3\">\r\n          <div className=\"container\">\r\n            <div className=\"brand-logo left\">\r\n              <Link to=\"/\">ProjectPlan</Link>\r\n            </div>\r\n            {links}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    authStatus: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavigationBar);\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nclass Notifications extends Component {\r\n  render() {\r\n    const { notifications } = this.props;\r\n    return (\r\n      <div className=\"section\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">Notifications</span>\r\n            <ul className=\"notifications\">\r\n              {notifications &&\r\n                notifications.map(key => {\r\n                  return (\r\n                    <li key={key.id}>\r\n                      <span className=\"pink-text\">{key.user}</span>{' '}\r\n                      <span>{key.content}</span>\r\n                      <div className=\"grey-text note-date\">\r\n                        {moment(key.time.toDate()).fromNow()}\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notifications;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { capitalize } from 'lodash/string';\r\nimport moment from 'moment';\r\n\r\nclass ProjectsSummary extends Component {\r\n  render() {\r\n    const { project } = this.props;\r\n\r\n    return (\r\n      <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>\r\n            Posted by the user{' '}\r\n            {capitalize(project.authorFirstname) +\r\n              ' ' +\r\n              capitalize(project.authorLastname)}{' '}\r\n          </p>\r\n          <p className=\"grey-text\">\r\n            {moment(project.createdAt.toDate()).calendar()}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authStatus: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProjectsSummary);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ProjectsSummary from './ProjectsSummary';\r\n\r\nclass ProjectsList extends Component {\r\n  render() {\r\n    // console.log(this.props);\r\n    const { projects } = this.props;\r\n\r\n    return (\r\n      <div className=\"projects-list section\">\r\n        {projects &&\r\n          projects.map(project => {\r\n            return (\r\n              <div key={project.id} className=\"card\">\r\n                <Link to={`/project/${project.id}`} key={project.id}>\r\n                  <ProjectsSummary project={project} />\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectsList;\r\n","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectsList from '../projects/ProjectsList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    projects: null\r\n  };\r\n  render() {\r\n    const { projects, authStatus, notifications } = this.props;\r\n\r\n    if (!authStatus.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <div className=\"card\">\r\n              <ProjectsList projects={projects} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.Projects,\r\n    notifications: state.firestore.ordered.Notifications,\r\n    authStatus: state.firebase.auth\r\n  };\r\n};\r\n\r\n//Use: Whenever the Dashboard component is active, it listens to the Firestore\r\n// Database collection with name 'Projects' or 'Notifications'\r\n// (through firestoreConnect) and when there is a change in the store's state,\r\n// it syncs this component's props (thanks to mapStateToProps)\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'Projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'Notifications', limit: 5, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { capitalize } from 'lodash/string';\r\nimport moment from 'moment';\r\n\r\nclass ProjectDetails extends Component {\r\n  render() {\r\n    const {\r\n      title,\r\n      content,\r\n      authorFirstname,\r\n      authorLastname,\r\n      createdAt\r\n    } = this.props.project;\r\n\r\n    const { authStatus } = this.props;\r\n    if (!authStatus.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n\r\n    console.log(this.props);\r\n\r\n    if (this.props.project) {\r\n      return (\r\n        <div className=\"container section project-details\">\r\n          <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n              <span className=\"card-title\">\r\n                <h4>{title}</h4>\r\n              </span>\r\n              <p>{content}</p>\r\n            </div>\r\n            <div className=\"card-action gret lighten-4 grey-text\">\r\n              <div>\r\n                Posted by the user{' '}\r\n                {capitalize(authorFirstname) + ' ' + capitalize(authorLastname)}\r\n              </div>\r\n              <div>{moment(createdAt.toDate()).calendar()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container center\">\r\n          <p>Loading project details...</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const project = state.firestore.data.Projects\r\n    ? state.firestore.data.Projects[id]\r\n    : null;\r\n\r\n  return {\r\n    project,\r\n    authStatus: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: 'Projects' }])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    firstname: '',\r\n    lastname: '',\r\n    username: '',\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.hydrateStateWithLocalStorage();\r\n    // add event listener to save state to localStorage\r\n    // when user leaves/refreshes the page\r\n    window.addEventListener(\r\n      'beforeunload',\r\n      this.saveStateToLocalStorage.bind(this)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\r\n      'beforeunload',\r\n      this.saveStateToLocalStorage.bind(this)\r\n    );\r\n\r\n    // saves if component has a chance to unmount\r\n    this.saveStateToLocalStorage();\r\n  }\r\n\r\n  hydrateStateWithLocalStorage() {\r\n    // for all items in state\r\n    for (let key in this.state) {\r\n      // if the key exists in localStorage\r\n      if (localStorage.hasOwnProperty(key)) {\r\n        // get the key's value from localStorage\r\n        let value = localStorage.getItem(key);\r\n\r\n        // parse the localStorage string and setState\r\n        try {\r\n          value = JSON.parse(value);\r\n          this.setState({ [key]: value });\r\n        } catch (e) {\r\n          // handle empty string\r\n          this.setState({ [key]: value });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  saveStateToLocalStorage() {\r\n    // for every item in React state\r\n    for (let key in this.state) {\r\n      // save to localStorage\r\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\r\n      // console.log(`key: ${key}, value: ${this.state[key]}`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { authError, authStatus } = this.props;\r\n    if (authStatus.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <h5 className=\"grey-text text-darken-3 center\">Sign Up</h5>\r\n        <form className=\"col s6 m6\" onSubmit={this.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s5 offset-m4\">\r\n              <input\r\n                className=\"validate\"\r\n                id=\"firstname\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"firstname\">First Name</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s5 offset-m4\">\r\n              <input\r\n                className=\"validate\"\r\n                id=\"lastname\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"lastname\">Last Name</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6 offset-m3\">\r\n              <input\r\n                className=\"validate\"\r\n                id=\"username\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"username\">Username</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6 offset-m3\">\r\n              <input\r\n                className=\"validate\"\r\n                id=\"email\"\r\n                type=\"email\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"email\">Email</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6 offset-m3\">\r\n              <input\r\n                className=\"validate\"\r\n                id=\"password\"\r\n                type=\"password\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"password\">Password</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6 offset-m5\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>*{authError.message}</p> : null}\r\n          </div>\r\n\r\n          <div className=\"center\">\r\n            <p>\r\n              Already have an account? <Link to=\"/signin\">Sign in</Link>{' '}\r\n              instead.\r\n            </p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state,\r\n    authError: state.auth.authError,\r\n    authStatus: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { signIn } from '../../actions/authActions';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n    return <Redirect to=\"/\" />;\r\n  };\r\n\r\n  render() {\r\n    const { authError, authStatus } = this.props;\r\n\r\n    if (authStatus.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <h5 className=\"grey-text text-darken-3 center\">Sign In</h5>\r\n        <form className=\"col s6 m6\" onSubmit={this.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6 offset-m3\">\r\n              <input\r\n                className=\"validate\"\r\n                id=\"email\"\r\n                type=\"text\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"email\">Email</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6 offset-m3\">\r\n              <input\r\n                className=\"validate\"\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"password\">Password</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6 offset-m5\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"red-text center\">\r\n          {authError ? <p>*{authError.message}</p> : null}\r\n        </div>\r\n\r\n        <div className=\"center\">\r\n          <p>\r\n            Don't have an account? <Link to=\"/signup\">Sign up</Link> instead.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state,\r\n    authError: state.auth.authError,\r\n    authStatus: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: credentials => dispatch(signIn(credentials))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { createProject } from '../../actions/projectActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { authStatus } = this.props;\r\n    if (!authStatus.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <h5 className=\"grey-text text-darken-3 center\">Create a new Project</h5>\r\n        <form className=\"col s6 m6\" onSubmit={this.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6 offset-m3\">\r\n              <input\r\n                id=\"title\"\r\n                type=\"text\"\r\n                value={this.state.title}\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"title\">Title</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6 offset-m3\">\r\n              <textarea\r\n                className=\"materialize-textarea\"\r\n                id=\"content\"\r\n                value={this.state.content}\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"content\">Project Content</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6 offset-m5\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authStatus: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateProject);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    //make an async call to database to fetch project\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const uid = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection('Projects')\r\n      .add({\r\n        ...project,\r\n        authorFirstname: profile.firstname,\r\n        authorLastname: profile.lastname,\r\n        authorID: uid,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'CREATE_PROJECT_SUCCESS', project });\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: 'CREATE_PROJECT_FAIL', error });\r\n      });\r\n  };\r\n};\r\n","const initState = {};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n\r\n    case 'LOGIN_FAIL':\r\n      console.log('login fail');\r\n      return {\r\n        ...state,\r\n        authError: action.error\r\n      };\r\n\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('sign up success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n\r\n    case 'SIGNUP_FAIL':\r\n      console.log('sign up fail');\r\n      return {\r\n        ...state,\r\n        authError: action.error\r\n      };\r\n\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('singout success');\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case 'SIGNOUT_FAIL':\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT_SUCCESS':\r\n      console.log('created project', action.project);\r\n      return {\r\n        ...state,\r\n        project: action.project\r\n      };\r\n\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.error);\r\n      return { ...state };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore';\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: \"AIzaSyACL5L1u73-vbKN0XqNz3GEdCD8ANsvaDs\",\r\n  authDomain: \"projectplan-1.firebaseapp.com\",\r\n  databaseURL: \"https://projectplan-1.firebaseio.com\",\r\n  projectId: \"projectplan-1\",\r\n  storageBucket: \"projectplan-1.appspot.com\",\r\n  messagingSenderId: \"97466659905\"\r\n};\r\n\r\n//initialize firebase instance\r\nfirebase.initializeApp(config);\r\n//initialize Cloud Firestore through firebase\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\n\nimport NavigationBar from './components/layout/NavigationBar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignUp from './components/auth/SignUp';\nimport SignIn from './components/auth/SignIn';\nimport CreateProject from './components/projects/CreateProject';\nimport './index.css';\nimport rootReducer from './reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { loadState, saveState } from './localStorage';\n\nimport fbConfig from './config/fbConfig';\n\nconst persistedState = loadState();\n\nconst createStoreWithFirebase = compose(\n  applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n  reactReduxFirebase(fbConfig, {\n    useFirestoreForProfile: true,\n    userProfile: 'Users',\n    attachAuthIsReady: true\n  }),\n  reduxFirestore(fbConfig)\n)(createStore);\n\nexport const store = createStoreWithFirebase(\n  rootReducer,\n  // persistedState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe(() => {\n  saveState({\n    project: store.getState().project\n  });\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <NavigationBar />\n            <Switch>\n              <Route path=\"/\" exact component={Dashboard} />\n              <Route path=\"/project/:id\" component={ProjectDetails} />\n              <Route path=\"/signup\" component={SignUp} />\n              <Route path=\"/signin\" component={SignIn} />\n              <Route path=\"/create\" component={CreateProject} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n    console.log(err);\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './App';\n\nstore.firebaseAuthIsReady.then(() =>\n  ReactDOM.render(<App />, document.getElementById('root'))\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}